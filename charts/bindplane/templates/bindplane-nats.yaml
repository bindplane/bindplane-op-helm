{{- if eq .Values.eventbus.type "nats" }}
apiVersion: apps/v1
kind: {{ .Values.nats.deploymentType }}
metadata:
  name: {{ include "bindplane.fullname" . }}-nats
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ include "bindplane.name" . }}
    app.kubernetes.io/stack: bindplane
    app.kubernetes.io/component: nats
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: 3
  {{ if eq .Values.nats.deploymentType "StatefulSet" }}
  serviceName: {{ include "bindplane.fullname" . }}-nats-cluster-headless
  podManagementPolicy: Parallel
  {{ end }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "bindplane.name" . }}
      app.kubernetes.io/stack: bindplane
      app.kubernetes.io/component: nats
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      annotations:
        {{- if eq .Values.metrics.type "prometheus" }}
        prometheus.io/scrape: "true"
        prometheus.io/path: /metrics
        prometheus.io/port: "3001"
        prometheus.io/scheme: http
        prometheus.io/job-name: bindplane-op
        {{- end }}
      labels:
        app.kubernetes.io/name: {{ include "bindplane.name" . }}
        app.kubernetes.io/stack: bindplane
        app.kubernetes.io/component: nats
        app.kubernetes.io/instance: {{ .Release.Name }}
        {{- if len .Values.extraPodLabels }}
        {{- toYaml .Values.extraPodLabels | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "bindplane.fullname" . }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.nodeSelector.nats }}
      nodeSelector:
      {{- toYaml .Values.nodeSelector.nats | nindent 8 }}
      {{- end }}
      {{- if .Values.affinity.nats }}
      affinity:
      {{- toYaml .Values.affinity.nats | nindent 8 }}
      {{- end }}
      {{- if .Values.topologySpreadConstraints.nats }}
      topologySpreadConstraints:
      {{- toYaml .Values.topologySpreadConstraints.nats | nindent 8 }}
      {{- end }}
      containers:
        - name: server
          image: {{ include "bindplane.image" . }}:{{ include "bindplane.tag" . }}
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3001
              name: http            
            - containerPort: 4222
              name: tcp
            - containerPort: 6222
              name: nats-cluster
            - containerPort: 8222
              name: nats-http
          env:
            - name: BINDPLANE_MODE
              value: node
            - name: BINDPLANE_ANALYTICS_DISABLED
              value: "{{ .Values.config.analytics.disable }}"
            - name: BINDPLANE_TRANSFORM_AGENT_ENABLE_REMOTE
              value: "true"
            - name: BINDPLANE_TRANSFORM_AGENT_REMOTE_AGENTS
              value: "{{ include "bindplane.fullname" . }}-transform-agent:4568"
            {{- if .Values.config.license }}
            - name: BINDPLANE_LICENSE
              value: {{ .Values.config.license }}
            {{- else if .Values.config.licenseUseSecret }}
            - name: BINDPLANE_LICENSE
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.config.secret }}
                  key: license
                  optional: false
            {{- end}}
            - name: BINDPLANE_ACCEPT_EULA
              value: "{{ .Values.config.accept_eula }}"
            - name: BINDPLANE_REMOTE_URL
              {{- if .Values.config.server_url }}
              value: {{ .Values.config.server_url }}
              {{- else }}
              value: http://{{ include "bindplane.fullname" . }}.{{ .Release.Namespace }}.svc.cluster.local:3001
              {{- end }}
            {{ if eq .Values.auth.type "system" }}
            - name: BINDPLANE_USERNAME
              {{- if  .Values.config.username }}
              value: {{ .Values.config.username }}
              {{- else }}
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.config.secret }}
                  key: username
                  optional: false
              {{- end}}
            - name: BINDPLANE_PASSWORD
              {{- if  .Values.config.password }}
              value: {{ .Values.config.password }}
              {{- else }}
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.config.secret }}
                  key: password
                  optional: false
              {{- end}}
            {{- end }}
            {{- if .Values.config.secret_key }}
            - name: BINDPLANE_SECRET_KEY
              value: {{ .Values.config.secret_key }}
            {{- end }}
            - name: BINDPLANE_SESSION_SECRET
              {{- if  .Values.config.sessions_secret }}
              value: {{ .Values.config.sessions_secret }}
              {{- else }}
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.config.secret }}
                  key: sessions_secret
                  optional: true
              {{- end }}
            {{- if .Values.trace.type }}
            - name: BINDPLANE_TRACING_TYPE
              value: {{ .Values.trace.type }}
            - name: BINDPLANE_TRACING_OTLP_ENDPOINT
              value: {{ .Values.trace.otlp.endpoint }}
            - name: BINDPLANE_TRACING_OTLP_INSECURE
              value: "{{ .Values.trace.otlp.insecure }}"
            {{- end }}
            - name: BINDPLANE_LOGGING_OUTPUT
              value: stdout
            - name: BINDPLANE_CONFIG_HOME
              value: /data  
            - name: BINDPLANE_STORE_TYPE
              value: bbolt
            - name: BINDPLANE_EVENT_BUS_TYPE
              value: nats
            - name: BINDPLANE_NATS_SERVER_ENABLE
              value: "true"
            - name: BINDPLANE_NATS_SERVER_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: BINDPLANE_NATS_SERVER_CLIENT_HOST
              value: "0.0.0.0"
            - name: BINDPLANE_NATS_SERVER_CLIENT_PORT
              value: "4222"
            - name: BINDPLANE_NATS_SERVER_HTTP_HOST
              value: "0.0.0.0"
            - name: BINDPLANE_NATS_SERVER_HTTP_PORT
              value: "8222"
            - name: BINDPLANE_NATS_SERVER_CLUSTER_NAME
              value: bindplane-{{ include "bindplane.fullname" . }}
            - name: BINDPLANE_NATS_SERVER_CLUSTER_HOST
              value: "0.0.0.0"
            - name: BINDPLANE_NATS_SERVER_CLUSTER_PORT
              value: "6222"
            - name: BINDPLANE_NATS_SERVER_CLUSTER_ROUTES
              {{ if eq .Values.nats.deploymentType "StatefulSet" }}
              value: nats://{{ include "bindplane.fullname" . }}-nats-0.{{ include "bindplane.fullname" . }}-nats-cluster-headless.{{ .Release.Namespace }}.svc.cluster.local:6222,nats://{{ include "bindplane.fullname" . }}-nats-1.{{ include "bindplane.fullname" . }}-nats-cluster-headless.{{ .Release.Namespace }}.svc.cluster.local:6222,nats://{{ include "bindplane.fullname" . }}-nats-2.{{ include "bindplane.fullname" . }}-nats-cluster-headless.{{ .Release.Namespace }}.svc.cluster.local:6222
              {{ end }}
              {{ if eq .Values.nats.deploymentType "Deployment" }}
              value: nats://{{ include "bindplane.fullname" . }}-nats-cluster-headless.{{ .Release.Namespace }}.svc.cluster.local:6222
              {{ end }}
            - name: BINDPLANE_NATS_CLIENT_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: BINDPLANE_NATS_CLIENT_ENDPOINT
              value: nats://127.0.0.1:4222
            - name: BINDPLANE_NATS_CLIENT_SUBJECT
              value: bindplane-event-bus
            {{- if eq (include "bindplane.auth.type" .) "ldap" }}
            - name: BINDPLANE_AUTH_TYPE
              value: {{ .Values.auth.type }}
            - name: BINDPLANE_LDAP_PROTOCOL
              value: {{ .Values.auth.ldap.protocol }}
            - name: BINDPLANE_LDAP_SERVER
              value: {{ .Values.auth.ldap.server }}
            - name: BINDPLANE_LDAP_PORT
              {{- if eq .Values.auth.ldap.protocol "ldaps"}}
              value: "{{ .Values.auth.ldap.port | default (printf "%s" "1636" ) }}"
              {{- else }}
              value: "{{ .Values.auth.ldap.port | default (printf "%s" "1389" ) }}"
              {{- end }}
            - name: BINDPLANE_LDAP_BASE_DN
              value: {{ .Values.auth.ldap.baseDN }}
            - name: BINDPLANE_LDAP_BIND_USER
              {{ if .Values.auth.ldap.bindCredentialSecret.name }}
              valueFrom:
                secretKeyRef:
                  name: {{  .Values.auth.ldap.bindCredentialSecret.name }}
                  key: {{ .Values.auth.ldap.bindCredentialSecret.usernameKey }}
                  optional: false
              {{ else }}
              value: {{ .Values.auth.ldap.bindUser }}
              {{ end }}
            - name: BINDPLANE_LDAP_BIND_PASSWORD
              {{ if .Values.auth.ldap.bindCredentialSecret.name }}
              valueFrom:
                secretKeyRef:
                  name: {{  .Values.auth.ldap.bindCredentialSecret.name }}
                  key: {{ .Values.auth.ldap.bindCredentialSecret.passwordKey }}
                  optional: false
              {{ else }}
              value: {{ .Values.auth.ldap.bindPassword }}
              {{ end }}
            - name: BINDPLANE_LDAP_SEARCH_FILTER
              {{- if eq .Values.auth.type "active-directory"}}
              value: {{ .Values.auth.ldap.searchFilter | default (printf "%s" "(|(sAMAccountName=%[1]v)(userPrincipalName=%[1]v))" ) }}
              {{- else}}
              value: {{ .Values.auth.ldap.searchFilter | default (printf "%s" "(uid=%s)" ) }}
              {{- end }}
            {{- if .Values.auth.ldap.tls.ca.secret }}
            - name: BINDPLANE_LDAP_TLS_CA
              value: /ldap-ca.crt
            {{- end }}
            {{- if .Values.auth.ldap.tls.insecure }}
            - name: BINDPLANE_LDAP_TLS_SKIP_VERIFY
              value: "true"
            {{- end }}
            {{- end }}
            {{- if eq .Values.auth.type "google" }}
            - name: BINDPLANE_AUTH_TYPE
              value: google
            - name: BINDPLANE_GOOGLE_AUTH_CLIENT_ID
              value: {{ .Values.auth.google.clientid }}
            {{- end }}
            {{- if eq .Values.auth.type "auth0" }}
            - name: BINDPLANE_AUTH_TYPE
              value: auth0
            - name: BINDPLANE_AUTH0_CLIENT_ID
              value: {{ .Values.dev.auth.auth0.clientid }}
            - name: BINDPLANE_AUTH0_DOMAIN
              value: {{ .Values.dev.auth.auth0.domain }}
            - name: BINDPLANE_AUTH0_AUDIENCE
              value: {{ .Values.dev.auth.auth0.audience }}
            - name: BINDPLANE_AUTH0_MANAGEMENT_DOMAIN
              value: {{ .Values.dev.auth.auth0.managementdomain }}
            - name: BINDPLANE_AUTH0_MANAGEMENT_CLIENT_ID
              value: {{ .Values.dev.auth.auth0.managementclientid }}
            - name: BINDPLANE_AUTH0_MANAGEMENT_CLIENT_SECRET
              value: {{ .Values.dev.auth.auth0.managementclientsecret }}
            {{- end }}
            {{- if eq .Values.multiAccount true }}
            - name: BINDPLANE_ACCOUNTS_ENABLE
              value: "true"
            {{- end }}
            {{- if and (eq .Values.email.type "sendgrid") (eq .Values.multiAccount true) (ne .Values.auth.type "system") }}
            - name: BINDPLANE_EMAIL_TYPE
              value: sendgrid
            - name: BINDPLANE_SEND_GRID_API_TOKEN
              value: {{ .Values.email.sendgrid.token }}
            {{- end }}
            - name: BINDPLANE_PORT
              value: "3001"
            - name: BINDPLANE_PROMETHEUS_ENABLE
              value: "true"
            - name: BINDPLANE_PROMETHEUS_ENABLE_REMOTE
              value: "true"
            - name: BINDPLANE_PROMETHEUS_HOST
              {{-  if .Values.prometheus.remote }}
              value: {{ .Values.prometheus.host }}
              {{- else }}
              value: {{ include "bindplane.fullname" . }}-prometheus
              {{- end }}
            - name: BINDPLANE_PROMETHEUS_PORT
              value: "{{ .Values.prometheus.port }}"
            {{- if .Values.prometheus.queryPathPrefix }}
            - name: BINDPLANE_PROMETHEUS_QUERY_PATH_PREFIX
              value: {{ .Values.prometheus.queryPathPrefix }}
            {{- end }}
            {{- if and (.Values.prometheus.remoteWrite.host) (.Values.prometheus.remoteWrite.port) }}
            - name: BINDPLANE_PROMETHEUS_REMOTE_WRITE_HOST
              value: {{ .Values.prometheus.remoteWrite.host }}
            - name: BINDPLANE_PROMETHEUS_REMOTE_WRITE_PORT
              value: "{{ .Values.prometheus.remoteWrite.port }}"
            {{- end }}
            - name: BINDPLANE_PROMETHEUS_REMOTE_WRITE_ENDPOINT
              value: {{ .Values.prometheus.remoteWrite.path }}
            - name: BINDPLANE_PROMETHEUS_AUTH_TYPE
              value: {{ .Values.prometheus.auth.type }}
            {{- if eq .Values.prometheus.auth.type "basic" }}
            - name: BINDPLANE_PROMETHEUS_AUTH_USERNAME
              value: {{ .Values.prometheus.auth.username }}
            - name: BINDPLANE_PROMETHEUS_AUTH_PASSWORD
              value: {{ .Values.prometheus.auth.password }}
            {{- end }}
            {{- if .Values.prometheus.tls.enable }}
            - name: BINDPLANE_PROMETHEUS_ENABLE_TLS
              value: "true"
            - name: BINDPLANE_PROMETHEUS_TLS_SKIP_VERIFY
              value: "{{ .Values.prometheus.tls.insecure }}"
            {{- if .Values.prometheus.tls.secret.caSubPath }}
            - name: BINDPLANE_PROMETHEUS_TLS_CA
              value: /prometheus-ca.crt
            {{- end }}
            {{- if .Values.prometheus.tls.secret.crtSubPath }}
            - name: BINDPLANE_PROMETHEUS_TLS_CERT
              value: /prometheus-client.crt
            {{- end }}
            {{- if .Values.prometheus.tls.secret.keySubPath }}
            - name: BINDPLANE_PROMETHEUS_TLS_KEY
              value: /prometheus-client.key
            {{- end }}
            {{- end }}
            {{- if eq .Values.metrics.type "prometheus" }}
            - name: BINDPLANE_METRICS_TYPE
              value: prometheus
            - name: BINDPLANE_METRICS_PROMETHEUS_ENDPOINT
              value: /metrics
            {{- end }}
            {{- if eq .Values.metrics.type "otlp" }}
            - name: BINDPLANE_METRICS_TYPE
              value: otlp
            - name: BINDPLANE_METRICS_OTLP_ENDPOINT
              value: {{ .Values.metrics.otlp.endpoint }}
            - name: BINDPLANE_METRICS_OTLP_INSECURE
              value: "{{ .Values.metrics.otlp.insecure }}"
            {{- end }}
            {{- if len .Values.extraEnv }}
            {{- toYaml .Values.extraEnv | nindent 12 }}
            {{- end }}
          {{- with .Values.nats.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          startupProbe:
            httpGet:
              path: /healthz
              port: nats-http
            initialDelaySeconds: 0
            timeoutSeconds: 5
            periodSeconds: 1
            successThreshold: 1
            failureThreshold: 10
          readinessProbe:
            httpGet:
              path: /healthz?js-server-only=true
              port: nats-http
            initialDelaySeconds: 0
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /healthz?js-enabled-only=true
              port: nats-http
            initialDelaySeconds: 0
            timeoutSeconds: 5
            periodSeconds: 30
            successThreshold: 1
            failureThreshold: 3
          {{- with .Values.containerSecurityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - mountPath: /data
              name: data
            {{- if eq (include "bindplane.auth.type" .) "ldap" }}
            {{- if .Values.auth.ldap.tls.ca.secret }}
            - mountPath: /ldap-ca.crt
              name: {{ .Values.auth.ldap.tls.ca.secret }}
              subPath: {{ .Values.auth.ldap.tls.ca.subPath }}
            {{- end }}
            {{- end }}
            {{- if .Values.prometheus.tls.enable }}
            {{- if .Values.prometheus.tls.secret.caSubPath }}
            - mountPath: /prometheus-ca.crt
              name: {{ .Values.prometheus.tls.secret.name }}
              subPath: {{ .Values.prometheus.tls.secret.caSubPath }}
            {{- end }}
            {{- if .Values.prometheus.tls.secret.crtSubPath }}
            - mountPath: /prometheus-client.crt
              name: {{ .Values.prometheus.tls.secret.name }}
              subPath: {{ .Values.prometheus.tls.secret.crtSubPath }}
            {{- end }}
            {{- if .Values.prometheus.tls.secret.keySubPath }}
            - mountPath: /prometheus-client.key
              name: {{ .Values.prometheus.tls.secret.name }}
              subPath: {{ .Values.prometheus.tls.secret.keySubPath }}
            {{- end }}
            {{- end }}
            {{- if len .Values.extraVolumeMounts }}
            {{- toYaml .Values.extraVolumeMounts | nindent 12 }}
            {{- end }}
          lifecycle:
            preStop:
              exec:
                command: ["sh", "-c", "sleep 5",]
      terminationGracePeriodSeconds: 60
      volumes:
        - name: data
          emptyDir: {}
        {{- if eq (include "bindplane.auth.type" .) "ldap" }}
        {{- if .Values.auth.ldap.tls.ca.secret }}
        - name: {{ .Values.auth.ldap.tls.ca.secret }}
          secret:
            defaultMode: 0400
            secretName: {{ .Values.auth.ldap.tls.ca.secret }}
        {{- end }}
        {{- end }}
        {{- if .Values.prometheus.tls.enable }}
        {{- if .Values.prometheus.tls.secret.name }}
        - name: {{ .Values.prometheus.tls.secret.name }}
          secret:
            defaultMode: 0400
            secretName: {{ .Values.prometheus.tls.secret.name }}
        {{- end }}
        {{- end }}
        {{- if len .Values.extraVolumes }}
        {{- toYaml .Values.extraVolumes | nindent 8 }}
        {{- end }}
{{- end }}
