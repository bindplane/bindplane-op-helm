{{- if not .Values.prometheus.remote }}
{{- if not .Values.prometheus.enableSideCar }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "bindplane.fullname" . }}-prometheus
data:
  prometheus.yml: |
    scrape_configs: []
    rule_files: [/etc/prometheus/rules.yml]
  web.yml: |
    # This file should be empty unless configured
    # by the user. See the Prometheus auth and TLS
    # docs here: https://prometheus.io/docs/prometheus/latest/configuration/https/
  rules.yml: |
    groups:
    - name: configuration-rollups
      interval: 1m
      rules:
      - record: bindplane_agent_measurements:rollup:rate:1m
        expr: sum without (agent) (rate(bindplane_agent_measurements{}[1m9s999ms] offset 10s))
    - name: 5m-configuration-rollups
      interval: 5m
      rules:
      - record: bindplane_agent_measurements:rollup:rate:5m
        expr: sum without (agent) (rate(bindplane_agent_measurements:1m{}[5m59s999ms] offset 10s))
    - name: 1h-configuration-rollups
      interval: 1h
      rules:
      - record: bindplane_agent_measurements:rollup:rate:1h
        expr: sum without (agent) (rate(bindplane_agent_measurements:15m{}[1h14m59s999ms] offset 10s))
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "bindplane.fullname" . }}-prometheus
  labels:
    app.kubernetes.io/name: {{ include "bindplane.name" . }}
    app.kubernetes.io/stack: bindplane
    app.kubernetes.io/component: prometheus
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: 1
  serviceName: {{ include "bindplane.fullname" . }}-prometheus
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "bindplane.name" . }}
      app.kubernetes.io/stack: bindplane
      app.kubernetes.io/component: prometheus
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "bindplane.name" . }}
        app.kubernetes.io/stack: bindplane
        app.kubernetes.io/component: prometheus
        app.kubernetes.io/instance: {{ .Release.Name }}
        {{- if len .Values.prometheus.extraPodLabels }}
        {{- toYaml .Values.prometheus.extraPodLabels | nindent 8 }}
        {{- end }}
    spec:
      priorityClassName: {{ .Values.priorityClassName.prometheus }}
      securityContext:
        fsGroup: 65534
      {{- with .Values.prometheus.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.nodeSelector.prometheus }}
      nodeSelector:
      {{- toYaml .Values.nodeSelector.prometheus | nindent 8 }}
      {{- end }}
      {{- if .Values.affinity.prometheus }}
      affinity:
      {{- toYaml .Values.affinity.prometheus | nindent 8 }}
      {{- end }}
      {{- if .Values.topologySpreadConstraints.prometheus }}
      topologySpreadConstraints:
      {{- toYaml .Values.topologySpreadConstraints.prometheus | nindent 8 }}
      {{- end }}
      containers:
        - name: prometheus
          image: {{ .Values.prometheus.image.name }}:{{ .Values.prometheus.image.tag }}
          args:
            - --config.file=/etc/prometheus/prometheus.yml
            - --web.config.file=/etc/prometheus/web.yml
            - --storage.tsdb.retention.time=2d
            - --web.enable-remote-write-receiver
            - --web.listen-address=:9090
            - --storage.tsdb.path=/prometheus
            - --web.console.templates=/etc/prometheus/consoles
            - --web.console.libraries=/etc/prometheus/console_libraries
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            readOnlyRootFilesystem: true
            runAsUser: 65534
            capabilities:
              drop: ["ALL"]
          ports:
            - name: http
              containerPort: 9090
              protocol: TCP
          {{- with .Values.prometheus.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - mountPath: /prometheus
              name: {{ include "bindplane.fullname" . }}-prometheus-data
            - mountPath: /etc/prometheus/prometheus.yml
              subPath: prometheus.yml
              name: config
            - mountPath: /etc/prometheus/rules.yml
              subPath: rules.yml
              name: config
            - mountPath: /etc/prometheus/web.yml
              subPath: web.yml
              name: config
      volumes:
        - name: config
          configMap:
            name: {{ include "bindplane.fullname" . }}-prometheus
  persistentVolumeClaimRetentionPolicy:
    whenDeleted: Retain
    whenScaled: Retain
  volumeClaimTemplates:
    - metadata:
        name: {{ include "bindplane.fullname" . }}-prometheus-data
        labels:
          app.kubernetes.io/name: {{ include "bindplane.name" . }}
          app.kubernetes.io/stack: bindplane
          app.kubernetes.io/component: prometheus
          app.kubernetes.io/instance: {{ .Release.Name }}
          app.kubernetes.io/managed-by: {{ .Release.Service }}
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: {{ .Values.prometheus.storage.volumeSize }}
        {{- if .Values.prometheus.storage.storageClass }}
        storageClassName: {{ .Values.prometheus.storage.storageClass }}
        {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "bindplane.fullname" . }}-prometheus
  labels:
    app.kubernetes.io/name: {{ include "bindplane.name" . }}
    app.kubernetes.io/stack: bindplane
    app.kubernetes.io/component: prometheus
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  ports:
    - port: 9090
      protocol: TCP
      targetPort: http
      name: http
  selector:
    app.kubernetes.io/name: {{ include "bindplane.name" . }}
    app.kubernetes.io/stack: bindplane
    app.kubernetes.io/component: prometheus
    app.kubernetes.io/instance: {{ .Release.Name }}
  sessionAffinity: None
  type: ClusterIP
{{- end }}
{{- end }}
