apiVersion: apps/v1
kind: {{ include "bindplane.deployment_type" . }}
metadata:
  name: {{ include "bindplane.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ include "bindplane.name" . }}
    app.kubernetes.io/stack: bindplane
    app.kubernetes.io/component: server
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  {{- if eq (include "bindplane.deployment_type" .) "StatefulSet" }}
  replicas: 1
  serviceName: {{ include "bindplane.fullname" . }}
  {{- else }}
  replicas: 1
  {{- end }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "bindplane.name" . }}
      app.kubernetes.io/stack: bindplane
      app.kubernetes.io/component: server
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "bindplane.name" . }}
        app.kubernetes.io/stack: bindplane
        app.kubernetes.io/component: server
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ include "bindplane.fullname" . }}
      securityContext:
        fsGroup: 65534
      containers:
        - name: server
          image: {{ include "bindplane.image" . }}
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3001
              name: http
          env:
            - name: BINDPLANE_CONFIG_SERVER_URL
              value: {{ .Values.config.server_url }}
            - name: BINDPLANE_CONFIG_REMOTE_URL
              value: {{ .Values.config.remote_url }}
            - name: BINDPLANE_CONFIG_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.config.secret }}
                  key: username
                  optional: false
            - name: BINDPLANE_CONFIG_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.config.secret }}
                  key: password
                  optional: false
            - name: BINDPLANE_CONFIG_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.config.secret }}
                  key: secret_key
                  optional: false
            - name: BINDPLANE_CONFIG_SESSIONS_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.config.secret }}
                  key: sessions_secreet
                  optional: true
            - name: BINDPLANE_CONFIG_LOG_OUTPUT
              value: stdout
            # Write everything to the persistent volume
            - name: BINDPLANE_CONFIG_HOME
              value: /data
            - name: BINDPLANE_CONFIG_STORAGE_FILE_PATH
              value: /data/storage
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          startupProbe:
            httpGet:
              path: /health
              port: http
          readinessProbe:
            httpGet:
              path: /health
              port: http
          livenessProbe:
            httpGet:
              path: /health
              port: http
          securityContext:
            runAsNonRoot: true
            runAsUser: 65534
            # Persistent data is written to a volume, the bindplane process should
            # never need to write to the container filesystem.
            readOnlyRootFilesystem: true
            capabilities:
              drop: ["ALL"]
          volumeMounts:
            {{- if eq .Values.backend.type "bbolt" }}
            - mountPath: /data
              name: {{ include "bindplane.fullname" . }}-data
            {{- end }}
          lifecycle:
            preStop:
              exec:
                command: ["sh", "-c", "sleep 5",]
      terminationGracePeriodSeconds: 60
  {{- if eq (include "bindplane.deployment_type" .) "StatefulSet" }}
  volumeClaimTemplates:
    {{- if eq .Values.backend.type "bbolt" }}
    - metadata:
        name: {{ include "bindplane.fullname" . }}-data
        labels:
          app.kubernetes.io/name: {{ include "bindplane.name" . }}
          app.kubernetes.io/stack: bindplane
          app.kubernetes.io/component: server
          app.kubernetes.io/instance: {{ .Release.Name }}
          app.kubernetes.io/managed-by: {{ .Release.Service }}
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: {{ .Values.backend.bbolt.volumeSize }}
    {{- end }}
  {{- end }}
