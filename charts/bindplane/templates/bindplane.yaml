apiVersion: apps/v1
kind: {{ include "bindplane.deployment_type" . }}
metadata:
  name: {{ include "bindplane.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ include "bindplane.name" . }}
    app.kubernetes.io/stack: bindplane
    app.kubernetes.io/component: server
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  {{- if eq (include "bindplane.deployment_type" .) "StatefulSet" }}
  replicas: 1
  serviceName: {{ include "bindplane.fullname" . }}
  {{- end }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "bindplane.name" . }}
      app.kubernetes.io/stack: bindplane
      app.kubernetes.io/component: server
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "bindplane.name" . }}
        app.kubernetes.io/stack: bindplane
        app.kubernetes.io/component: server
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ include "bindplane.fullname" . }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: server
          image: {{ include "bindplane.image" . }}:{{ include "bindplane.tag" . }}
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3001
              name: http
          env:
            {{- if (eq .Values.enterprise true) }}
            - name: BINDPLANE_TRANSFORM_AGENT_ENABLE_REMOTE
              value: "true"
            - name: BINDPLANE_TRANSFORM_AGENT_REMOTE_AGENTS
              value: "{{ include "bindplane.fullname" . }}-transform-agent:4568"
            {{- end }}
            {{- if .Values.enterprise }}
            - name: BINDPLANE_LICENSE
              value: {{ .Values.config.license }}
            - name: BINDPLANE_ACCEPT_EULA
              value: "{{ .Values.config.accept_eula }}"
            {{- end }}
            - name: BINDPLANE_REMOTE_URL
              {{- if .Values.config.server_url }}
              value: {{ .Values.config.server_url }}
              {{- else }}
              value: http://{{ include "bindplane.fullname" . }}.{{ .Release.Namespace }}.svc.cluster.local:3001
              {{- end }}
            - name: BINDPLANE_USERNAME
              {{- if  .Values.config.username }}
              value: {{ .Values.config.username }}
              {{- else }}
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.config.secret }}
                  key: username
                  optional: false
              {{- end}}
            - name: BINDPLANE_PASSWORD
              {{- if  .Values.config.password }}
              value: {{ .Values.config.password }}
              {{- else }}
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.config.secret }}
                  key: password
                  optional: false
              {{- end}}
            - name: BINDPLANE_SECRET_KEY
              {{- if  .Values.config.secret_key }}
              value: {{ .Values.config.secret_key }}
              {{- else }}
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.config.secret }}
                  key: secret_key
                  optional: false
              {{- end }}
            - name: BINDPLANE_SESSION_SECRET
              {{- if  .Values.config.sessions_secret }}
              value: {{ .Values.config.sessions_secret }}
              {{- else }}
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.config.secret }}
                  key: sessions_secret
                  optional: true
              {{- end }}
            {{- if .Values.trace.type }}
            - name: BINDPLANE_TRACING_TYPE
              value: {{ .Values.trace.type }}
            - name: BINDPLANE_TRACING_OTLP_ENDPOINT
              value: {{ .Values.trace.otlp.endpoint }}
            - name: BINDPLANE_TRACING_OTLP_INSECURE
              value: "{{ .Values.trace.otlp.insecure }}"
            {{- end }}
            - name: BINDPLANE_LOGGING_OUTPUT
              value: stdout
            - name: BINDPLANE_CONFIG_HOME
              value: /data  
            {{- if and (eq .Values.enterprise true) (eq .Values.backend.type "postgres") }}
            - name: BINDPLANE_STORE_TYPE
              value: postgres
            - name: BINDPLANE_POSTGRES_HOST
              value: {{ .Values.backend.postgres.host }}
            - name: BINDPLANE_POSTGRES_PORT
              value: "{{ .Values.backend.postgres.port }}"
            - name: BINDPLANE_POSTGRES_USERNAME
              value: {{ .Values.backend.postgres.username }}
            - name: BINDPLANE_POSTGRES_PASSWORD
              value: {{ .Values.backend.postgres.password }}
            - name: BINDPLANE_POSTGRES_DATABASE
              value: {{ .Values.backend.postgres.database }}
            - name: BINDPLANE_POSTGRES_SSL_MODE
              value: {{ .Values.backend.postgres.sslmode }}
            - name: BINDPLANE_POSTGRES_MAX_CONNECTIONS
              value: "{{ .Values.backend.postgres.maxConnections }}"
            {{- else }}
            - name: BINDPLANE_STORE_TYPE
              value: bbolt
            - name: BINDPLANE_STORE_BBOLT_PATH
              value: /data/storage
            {{- end }}
            {{- if and (eq .Values.enterprise true) (eq .Values.eventbus.type "pubsub") }}
            - name: BINDPLANE_EVENT_BUS_TYPE
              value: googlePubSub
            - name: BINDPLANE_GOOGLE_PUB_SUB_PROJECT_ID
              value: {{ .Values.eventbus.pubsub.projectid }}
            - name: BINDPLANE_GOOGLE_PUB_SUB_TOPIC
              value: {{ .Values.eventbus.pubsub.topic }}
            {{- if .Values.eventbus.pubsub.credentials.secret }}
            - name: BINDPLANE_GOOGLE_PUB_SUB_CREDENTIALS_FILE
              value: /credentials.json
            {{- end }}
            {{- end }}
            {{- if and (eq .Values.enterprise true) (eq .Values.eventbus.type "kafka") }}
            - name:  BINDPLANE_KAFKA_BROKERS
              value: {{ .Values.eventbus.kafka.brokers }}
            - name:  BINDPLANE_KAFKA_VERSION
              value: "{{ .Values.eventbus.kafka.version }}"
            - name:  BINDPLANE_KAFKA_TOPIC_NAME
              value: {{ .Values.eventbus.kafka.topic }}
            - name:  BINDPLANE_KAFKA_TOPIC_REPLICATION_FACTOR
              value: "{{ .Values.eventbus.kafka.replicationFactor }}"
            - name:  BINDPLANE_KAFKA_AUTH_TYPE
              value: {{ .Values.eventbus.kafka.auth.type }}
            {{- if eq .Values.eventbus.kafka.auth.type "plainText" }}
            - name:  BINDPLANE_KAFKA_PLAIN_TEXT_USERNAME
              value: {{ .Values.eventbus.kafka.auth.plain.username }}
            - name:  BINDPLANE_KAFKA_PLAIN_TEXT_PASSWORD
              value: {{ .Values.eventbus.kafka.auth.plain.password }}
            {{- end }}
            {{- if eq .Values.eventbus.kafka.auth.type "sasl" }}
            - name:  BINDPLANE_KAFKA_SASL_USERNAME
              value: {{ .Values.eventbus.kafka.auth.sasl.username }}
            - name:  BINDPLANE_KAFKA_SASL_PASSWORD
              value: {{ .Values.eventbus.kafka.auth.sasl.password }}
            - name:  BINDPLANE_KAFKA_SASL_MECHANISM
              value: {{ .Values.eventbus.kafka.auth.sasl.mechanism }}
            - name:  BINDPLANE_KAFKA_SASL_VERSION
              value: "{{ .Values.eventbus.kafka.auth.sasl.version }}"
            {{- end }}
            {{- if eq .Values.eventbus.kafka.tls.enable true }}
            - name:  BINDPLANE_KAFKA_ENABLE_TLS
              value: "true"
            - name:  BINDPLANE_KAFKA_TLS_CERT
              value: /kafka.crt
            - name:  BINDPLANE_KAFKA_TLS_KEY
              value: /kafka.key
            - name:  BINDPLANE_KAFKA_TLS_CA
              value: /kafka-ca.crt
            {{- if eq .Values.eventbus.kafka.tls.insecure true}}
            - name:  BINDPLANE_KAFKA_TLS_SKIP_VERIFY
              value: "true"
            {{- end }}
            {{- end }}
            {{- end }}
            {{- if and (eq .Values.enterprise true) (eq (include "bindplane.auth.type" .) "ldap") }}
            - name: BINDPLANE_AUTH_TYPE
              value: {{ .Values.auth.type }}
            - name: BINDPLANE_LDAP_PROTOCOL
              value: {{ .Values.auth.ldap.protocol }}
            - name: BINDPLANE_LDAP_SERVER
              value: {{ .Values.auth.ldap.server }}
            - name: BINDPLANE_LDAP_PORT
              {{- if eq .Values.auth.ldap.protocol "ldaps"}}
              value: "{{ .Values.auth.ldap.port | default (printf "%s" "1636" ) }}"
              {{- else }}
              value: "{{ .Values.auth.ldap.port | default (printf "%s" "1389" ) }}"
              {{- end }}
            - name: BINDPLANE_LDAP_BASE_DN
              value: {{ .Values.auth.ldap.baseDN }}
            - name: BINDPLANE_LDAP_BIND_USER
              value: {{ .Values.auth.ldap.bindUser }}
            - name: BINDPLANE_LDAP_BIND_PASSWORD
              value: {{ .Values.auth.ldap.bindPassword }}
            - name: BINDPLANE_LDAP_SEARCH_FILTER
              {{- if eq .Values.auth.type "active-directory"}}
              value: {{ .Values.auth.ldap.searchFilter | default (printf "%s" "(|(sAMAccountName=%[1]v)(userPrincipalName=%[1]v))" ) }}
              {{- else}}
              value: {{ .Values.auth.ldap.searchFilter | default (printf "%s" "(uid=%s)" ) }}
              {{- end }}
            {{- if .Values.auth.ldap.tls.ca.secret }}
            - name: BINDPLANE_LDAP_TLS_CA
              value: /ldap-ca.crt
            {{- end }}
            {{- if .Values.auth.ldap.tls.insecure }}
            - name: BINDPLANE_LDAP_TLS_SKIP_VERIFY
              value: "true"
            {{- end }}
            {{- end }}
            {{- if and (eq .Values.enterprise true) (eq .Values.auth.type "google") }}
            - name: BINDPLANE_AUTH_TYPE
              value: google
            - name: BINDPLANE_GOOGLE_AUTH_CLIENT_ID
              value: {{ .Values.auth.google.clientid }}
            {{- end }}
            {{- if and (eq .Values.enterprise true) (eq .Values.multiAccount true) }}
            - name: BINDPLANE_ACCOUNTS_ENABLE
              value: "true"
            {{- end }}
            {{- if and (eq .Values.email.type "sendgrid") (eq .Values.multiAccount true) (ne .Values.auth.type "system") }}
            - name: BINDPLANE_EMAIL_TYPE
              value: sendgrid
            - name: BINDPLANE_SEND_GRID_API_TOKEN
              value: {{ .Values.email.sendgrid.token }}
            {{- end }}
            - name: BINDPLANE_PORT
              value: "3001"
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          startupProbe:
            httpGet:
              path: /health
              port: http
          readinessProbe:
            httpGet:
              path: /health
              port: http
          livenessProbe:
            httpGet:
              path: /health
              port: http
          {{- with .Values.containerSecurityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            {{- if eq .Values.backend.type "bbolt" }}
            - mountPath: /data
              name: {{ include "bindplane.fullname" . }}-data
            {{- end }}
            {{- if and (eq .Values.enterprise true) (eq .Values.eventbus.type "pubsub") }}
            {{- if .Values.eventbus.pubsub.credentials.secret }}
            - mountPath: /credentials.json
              name: {{ .Values.eventbus.pubsub.credentials.secret }}
              subPath: {{ .Values.eventbus.pubsub.credentials.subPath }}
            {{- end }}
            {{- end }}
            {{- if and (eq .Values.enterprise true) (eq (include "bindplane.auth.type" .) "ldap") }}
            {{- if .Values.auth.ldap.tls.ca.secret }}
            - mountPath: /ldap-ca.crt
              name: {{ .Values.auth.ldap.tls.ca.secret }}
              subPath: {{ .Values.auth.ldap.tls.ca.subPath }}
            {{- end }}
            {{- end }}
            {{- if and (eq .Values.enterprise true) (eq .Values.eventbus.type "kafka") }}
            {{- if .Values.eventbus.kafka.tls.secret.caSubPath }}
            - mountPath: /kafka-ca.crt
              name: {{ .Values.eventbus.kafka.tls.secret.name }}
              subPath: {{ .Values.eventbus.kafka.tls.secret.caSubPath }}
            {{- end }}
            {{- if .Values.eventbus.kafka.tls.secret.certSubPath }}
            - mountPath: /kafka-ca.crt
              name: {{ .Values.eventbus.kafka.tls.secret.name }}
              subPath: {{ .Values.eventbus.kafka.tls.secret.certSubPath }}
            {{- end }}
            {{- if .Values.eventbus.kafka.tls.secret.keySubPath }}
            - mountPath: /kafka-ca.crt
              name: {{ .Values.eventbus.kafka.tls.secret.name }}
              subPath: {{ .Values.eventbus.kafka.tls.secret.keySubPath }}
            {{- end }}
            {{- end }}
          lifecycle:
            preStop:
              exec:
                command: ["sh", "-c", "sleep 5",]
      terminationGracePeriodSeconds: 60
      volumes:
        {{- if and (eq .Values.enterprise true) (eq .Values.eventbus.type "pubsub") }}
        {{- if .Values.eventbus.pubsub.credentials.secret }}
        - name: {{ .Values.eventbus.pubsub.credentials.secret }}
          secret:
            defaultMode: 0400
            secretName: {{ .Values.eventbus.pubsub.credentials.secret }}
        {{- end }}
        {{- end }}
        {{- if and (eq .Values.enterprise true) (eq (include "bindplane.auth.type" .) "ldap") }}
        {{- if .Values.auth.ldap.tls.ca.secret }}
        - name: {{ .Values.auth.ldap.tls.ca.secret }}
          secret:
            defaultMode: 0400
            secretName: {{ .Values.auth.ldap.tls.ca.secret }}
        {{- end }}
        {{- end }}
        {{- if and (eq .Values.enterprise true) (eq .Values.eventbus.type "kafka") }}
        {{- if .Values.eventbus.kafka.tls.secret.name }}
        - name: {{ .Values.eventbus.kafka.tls.secret.name }}
          secret:
            defaultMode: 0400
            secretName: {{ .Values.eventbus.kafka.tls.secret.name }}
        {{- end }}
        {{- end }}
  {{- if eq (include "bindplane.deployment_type" .) "StatefulSet" }}
  volumeClaimTemplates:
    {{- if eq .Values.backend.type "bbolt" }}
    - metadata:
        name: {{ include "bindplane.fullname" . }}-data
        labels:
          app.kubernetes.io/name: {{ include "bindplane.name" . }}
          app.kubernetes.io/stack: bindplane
          app.kubernetes.io/component: server
          app.kubernetes.io/instance: {{ .Release.Name }}
          app.kubernetes.io/managed-by: {{ .Release.Service }}
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: {{ .Values.backend.bbolt.volumeSize }}
        {{- if .Values.backend.bbolt.storageClass }}
        storageClassName: {{ .Values.backend.bbolt.storageClass }}
        {{- end }}
    {{- end }}
  {{- end }}
