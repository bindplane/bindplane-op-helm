kind: Namespace
apiVersion: v1
metadata:
  name: postgres
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: postgres-tls-init
  namespace: postgres
data:
  init.sh: |
    #!/bin/sh
    set -e
    cp /ca.crt /server.crt /server.key /postgres-tls
    chmod 0400 /postgres-tls/*
    chown -R 999:999 /postgres-tls
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: postgres-config
  namespace: postgres
data:
  postgresql.conf: |
    # Basic Configuration
    listen_addresses = '*'
    port = 5432
    max_connections = 100
    
    # SSL Configuration
    ssl = on
    ssl_cert_file = '/postgres-tls/server.crt'
    ssl_key_file = '/postgres-tls/server.key'
    ssl_ca_file = '/postgres-tls/ca.crt'
    ssl_ciphers = 'HIGH:MEDIUM:+3DES:!aNULL'
    ssl_prefer_server_ciphers = on
    
    # Logging
    log_destination = 'stderr'
    logging_collector = off
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  namespace: postgres
spec:
  serviceName: postgres
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      initContainers:
        - name: take-data-dir-ownership
          image: alpine:3
          command:
          - chown
          - -R
          - 999:999
          - /data
          volumeMounts:
          - name: database
            mountPath: /data
        - name: postgres-tls
          image: busybox
          command:
          - sh
          - -c
          - /bin/sh /init.sh
          volumeMounts:
          - name: postgres-tls-init
            mountPath: /init.sh
            subPath: init.sh
          - name: postgres-tls-dir
            mountPath: /postgres-tls
          - name: postgres-tls
            mountPath: /ca.crt
            subPath: ca.crt
          - name: postgres-tls
            mountPath: /server.crt
            subPath: server.crt
          - name: postgres-tls
            mountPath: /server.key
            subPath: server.key
      containers:
        - image: postgres:17
          name: postgres
          args:
            - "-c"
            - "config_file=/etc/postgresql/postgresql.conf"
          ports:
            - containerPort: 5432
              name: postgres
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
            limits:
              memory: 100Mi
          env:
            - name: POSTGRES_PASSWORD
              value: password
            - name: POSTGRES_HOST_AUTH_METHOD
              value: "scram-sha-256"
            - name: POSTGRES_INITDB_ARGS
              value: "--auth-host=scram-sha-256"
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: database
            - mountPath: /postgres-tls
              name: postgres-tls-dir
            - mountPath: /etc/postgresql/postgresql.conf
              name: postgres-config
              subPath: postgresql.conf
          livenessProbe:
            tcpSocket:
              port: 5432
      volumes:
        - name: database
          emptyDir: {}
        - name: postgres-tls
          secret:
            secretName: postgres-tls
        - name: postgres-tls-dir
          emptyDir: {}
        - name: postgres-tls-init
          configMap:
            name: postgres-tls-init
        - name: postgres-config
          configMap:
            name: postgres-config
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: postgres
  name: postgres
  namespace: postgres
spec:
  ports:
  - port: 5432
    protocol: TCP
    targetPort: postgres
    name: postgres
  selector:
    app: postgres
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: v1
kind: Secret
metadata:
  name: postgres-credentials
type: Opaque
data:
  username: cG9zdGdyZXM=
  password: cGFzc3dvcmQ=
